// Lista de im√°genes de flores
const flowerImages = [
    './pngwing.com (6).png',
    './pngwing.com (5).png',
    './pngwing.com (15).png',
    './pngwing.com (17).png',
    './pngwing.com (9).png',
    './pngwing.com (13).png',
    './pngwing.com (1).png'
    
];

// Lista de mensajes bonitos
const messages = [
    "üå∏",
    "En uste he encontrado una fortaleza que me asombra y una ternura que me enamora cada d√≠a m√°s. Nunca deje que las dudas le hagan olvidar lo incre√≠blemente √∫nica que es y lo hermosa que es mi ni√±a.",
    "Cada dia que pasa, me maravillo mas de ti. uste es fuerte, es hermosa, es inteligente y tiene la capacidad de hacer cualquier cosa que se proponga. no deje que nadie la haga dudar de eso. La quiero ‚ù§Ô∏è",
    "Uste es la persona mas hermosa que conozco, con una sonrisa que no solo ilumina el mundo, sino que desde la primera vez que la vi, enamoro mi coraz√≥n por completito. üå∑",
    "Cuando el cansancio la supere y las dudas sean demasiadas, recuerde que usted es capaz de lograr lo imposible. Eres la mejor mi amor y siempre estare aqui para recordarselo y quererla simpre.‚ú®",
    "Cada vez que la veo, me sorprende lo hermosa que eres, no solo por fuera, sino por todo lo que lleva en su corazoncito. uste es incre√≠ble en todo lo que hace y siempre se lo dire.üåü",
    "A veces me pregunto si los poetas conocieron su sonrisa, porque en cada palabra de amor que leo, la encuentro a uste. üíñ"
];





let availableFlowers = []; // Lista temporal de flores disponibles

// Genera flores aleatorias en la pantalla
function createFlower() {
    if (availableFlowers.length === 0) {
        // Si la lista temporal de flores est√° vac√≠a, vuelve a llenarla con las im√°genes originales
        availableFlowers = [...flowerImages];
    }

    const flower = document.createElement('img');
    
    // Selecciona una imagen aleatoria de la lista temporal de flores
    const randomIndex = Math.floor(Math.random() * availableFlowers.length);
    const randomImage = availableFlowers.splice(randomIndex, 1)[0]; // Eliminar de la lista temporal y obtener la imagen
    flower.src = randomImage;

    flower.classList.add('flower');
    
    // Posici√≥n inicial asegurada dentro de los l√≠mites de la pantalla
    flower.style.top = `${Math.random() * 75}vh`; // Mantenerse en el 75% de la pantalla vertical
    flower.style.left = `${Math.random() * 75}vw`; // Mantenerse en el 75% de la pantalla horizontal
    flower.style.animationDuration = `${15 + Math.random() * 20}s`; // Velocidad aleatoria, pero m√°s lenta

    // A√±adir evento de click/touch para mostrar mensaje
    flower.addEventListener('click', showMessage);
    flower.addEventListener('touchstart', showMessage);

    document.getElementById('flower-container').appendChild(flower);
}


// Crear part√≠culas brillantes
function createParticles() {
    const particleCount = 70; // N√∫mero de part√≠culas
    const messageBox = document.getElementById('message-box');

    for (let i = 0; i < particleCount; i++) {
        const particle = document.createElement('div');
        particle.classList.add('particle');


        // A√±adir un margen m√≠nimo para asegurar que no se amontonen
        const minMargin = 20; // M√≠nimo margen de 10% para top y left
        const maxTop = 100 - minMargin; 
        const maxLeft = 100 - minMargin;




        // Posici√≥n aleatoria alrededor del mensaje
        particle.style.top = `${Math.random() * 100}%`;
        particle.style.left = `${Math.random() * 100}%`;

        // A√±adir part√≠cula al mensaje
        messageBox.appendChild(particle);
    }
}



let availableMessages = []; // Lista temporal de mensajes disponibles

// Mostrar un mensaje bonito y animar la flor
function showMessage(event) {
    const flower = event.target;

    // Solo mostrar mensaje si a√∫n hay mensajes disponibles
    if (availableMessages.length > 0) {
        // Mostrar el mensaje
        const messageBox = document.getElementById('message-box');
        const messageText = document.getElementById('message-text');

        // Seleccionar y eliminar un mensaje aleatorio de la lista temporal
        const randomIndex = Math.floor(Math.random() * availableMessages.length);
        const selectedMessage = availableMessages.splice(randomIndex, 1)[0]; // Eliminar de la lista temporal y obtenerlo

        messageText.textContent = selectedMessage;
        messageBox.classList.remove('hidden');

        // Activar desenfoque de fondo
        document.body.classList.add('message-open');

        // Crear part√≠culas
        createParticles();
    }

    // Animar y desaparecer la flor
    flower.classList.add('disappear');
    flower.addEventListener('animationend', () => {
        flower.remove();
    });
}

// Cerrar el mensaje y remover desenfoque del fondo
document.getElementById('close-message').addEventListener('click', () => {
    document.getElementById('message-box').classList.add('hidden');
    document.body.classList.remove('message-open');


     // Remover part√≠culas
    const particles = document.querySelectorAll('.particle');
    particles.forEach(particle => particle.remove());
});



// Crear varias flores al cargar la p√°gina
window.onload = () => {
    // Hacer una copia de la lista original de mensajes al cargar la p√°gina
    availableMessages = [...messages];

    // Crear flores seg√∫n el n√∫mero de mensajes
    for (let i = 0; i < messages.length; i++) {
        createFlower();
    }
};

